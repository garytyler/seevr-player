name: build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-18.04, macos-10.15, windows-2019]
    env:
      VLC_VERSION: 3.0.11
      POETRY_VIRTUALENVS_CREATE: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.4

      - name: Set up Ruby
        if: runner.os == 'Linux'
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -qq install build-essential
          sudo apt-get -qq install vlc
          poetry install
          python build.py freeze
          gem install --no-document fpm
          python build.py installer

      - name: Build for macOS
        if: runner.os == 'macOS'
        run: |
          bash ./scripts/install-vlc-mac.sh
          poetry install
          python build.py freeze
          python build.py installer

      - name: Build for Windows
        if: runner.os == 'Windows'
        run: |
          powershell ./scripts/install-vlc-win.ps1
          poetry install
          python build.py freeze
          choco install nsis
          python build.py installer

      - name: Upload ${{ matrix.platform }} installer
        uses: actions/upload-artifact@v2
        with:
          name: installer-${{ matrix.platform }}
          path: |
            dist/*.deb
            dist/*.dmg
            dist/*.exe
